sep ::= (" " | "\t")+
comment ::= lineNum? sep? "REM" (!"\n" [^])*
var ::= [A-Z]
num ::= "-"? [0-9]+
assign ::= "LET" sep var sep? "=" sep? expr
goto ::= "GOTO" sep num
gosub ::= "GOSUB" sep num
return ::= "RETURN"
end ::= "END"
rand ::= "RND(" expr ")"
value ::= rand | num | var
string ::= "\"" ("\\" [^] | [^"])* "\""
formatString ::= (expr | string) (";" (expr | string))*
print ::= "PRINT" sep formatString
op ::= [-+*/]
term ::= value | "(" expr ")"
expr ::= term sep? (op sep? term sep?)*
comp ::= ">" | "<" | "==" | ">=" | "<=" | "<>"
condition ::= expr sep? comp sep? expr
if ::= "IF" sep condition sep? "THEN" sep line
input ::= "INPUT" sep var
lineNum ::= [0-9]+
line ::= assign | goto | if | print | input | end | gosub | return
fullLine ::= lineNum sep line
root ::= ((fullLine | comment) ("\n"+ | <eof>))*